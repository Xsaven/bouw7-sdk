<?php
/**
 * ContractApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bouw7 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ContractApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ContractApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteContractOrderLine
     *
     * Delete the given contract order line..
     *
     */
    public function testDeleteContractOrderLine()
    {
    }

    /**
     * Test case for deletePurchaseOrder
     *
     * Delete the given purchase order contract..
     *
     */
    public function testDeletePurchaseOrder()
    {
    }

    /**
     * Test case for deletePurchaseOrderContractTerm
     *
     * Delete the given purchase order contract term..
     *
     */
    public function testDeletePurchaseOrderContractTerm()
    {
    }

    /**
     * Test case for deleteSubcontractor
     *
     * Delete the given subcontractor contract..
     *
     */
    public function testDeleteSubcontractor()
    {
    }

    /**
     * Test case for deleteSubcontractorContractTerm
     *
     * Delete the given subcontractor contract term..
     *
     */
    public function testDeleteSubcontractorContractTerm()
    {
    }

    /**
     * Test case for getCalledReceiptBySubcontractorContract
     *
     * Returns a list of subcontractor contract called receipts associated with the given ID..
     *
     */
    public function testGetCalledReceiptBySubcontractorContract()
    {
    }

    /**
     * Test case for getCalledReceiptsByPurchaseOrderContract
     *
     * Returns a list of purchase order contract called receipts associated with the given ID..
     *
     */
    public function testGetCalledReceiptsByPurchaseOrderContract()
    {
    }

    /**
     * Test case for getFilesByPurchaseOrderContract
     *
     * Returns a collection of purchase order contract files with the given ID..
     *
     */
    public function testGetFilesByPurchaseOrderContract()
    {
    }

    /**
     * Test case for getFilesBySubcontractorContract
     *
     * Returns a collection of subcontractor contract files with the given ID..
     *
     */
    public function testGetFilesBySubcontractorContract()
    {
    }

    /**
     * Test case for getPurchaseOrder
     *
     * Returns a single purchase order contract based on the given ID..
     *
     */
    public function testGetPurchaseOrder()
    {
    }

    /**
     * Test case for getPurchaseOrderContractHistoryEntries
     *
     * Returns a list of purchase order contract history entries associated with the given ID..
     *
     */
    public function testGetPurchaseOrderContractHistoryEntries()
    {
    }

    /**
     * Test case for getPurchaseOrderCostTypes
     *
     * Returns available cost types for a purchase order..
     *
     */
    public function testGetPurchaseOrderCostTypes()
    {
    }

    /**
     * Test case for getPurchaseOrderStatuses
     *
     * Returns available statuses for a purchase order..
     *
     */
    public function testGetPurchaseOrderStatuses()
    {
    }

    /**
     * Test case for getSubcontractor
     *
     * Returns a single subcontractor contract based on the given ID..
     *
     */
    public function testGetSubcontractor()
    {
    }

    /**
     * Test case for getSubcontractorContractHistoryEntries
     *
     * Returns a list of subcontractor contract history entries associated with the given ID..
     *
     */
    public function testGetSubcontractorContractHistoryEntries()
    {
    }

    /**
     * Test case for getSubcontractorStatuses
     *
     * Returns available statuses for a subcontractor contract..
     *
     */
    public function testGetSubcontractorStatuses()
    {
    }

    /**
     * Test case for listContractOrderLines
     *
     * Returns all contract order lines for the current organization. Use HQL to filter for specific items..
     *
     */
    public function testListContractOrderLines()
    {
    }

    /**
     * Test case for listPurchaseOrderContractTerms
     *
     * Returns a list of purchase order contract terms..
     *
     */
    public function testListPurchaseOrderContractTerms()
    {
    }

    /**
     * Test case for listPurchaseOrderContracts
     *
     * Returns a list of purchase order contracts..
     *
     */
    public function testListPurchaseOrderContracts()
    {
    }

    /**
     * Test case for listSubcontractorContractTerms
     *
     * Returns a list of subcontractor contract terms..
     *
     */
    public function testListSubcontractorContractTerms()
    {
    }

    /**
     * Test case for listSubcontractorContracts
     *
     * Returns a list of subcontractor contracts..
     *
     */
    public function testListSubcontractorContracts()
    {
    }

    /**
     * Test case for postContractOrderLine
     *
     * Create or update the contract order line..
     *
     */
    public function testPostContractOrderLine()
    {
    }

    /**
     * Test case for postPurchaseOrder
     *
     * Create or update a purchase order contract with the schema..
     *
     */
    public function testPostPurchaseOrder()
    {
    }

    /**
     * Test case for postPurchaseOrderContractTerm
     *
     * Create or update the purchase order contract term..
     *
     */
    public function testPostPurchaseOrderContractTerm()
    {
    }

    /**
     * Test case for postSubcontractor
     *
     * Create or update a subcontractor contract with the schema..
     *
     */
    public function testPostSubcontractor()
    {
    }

    /**
     * Test case for postSubcontractorContractTerm
     *
     * Create or update the subcontractor contract term..
     *
     */
    public function testPostSubcontractorContractTerm()
    {
    }

    /**
     * Test case for updatePurchaseOrderStatus
     *
     * Update the purchase order contract with the given status..
     *
     */
    public function testUpdatePurchaseOrderStatus()
    {
    }

    /**
     * Test case for updateSubcontractorStatus
     *
     * Update the subcontractor contract with the given status..
     *
     */
    public function testUpdateSubcontractorStatus()
    {
    }
}
