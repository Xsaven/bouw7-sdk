<?php
/**
 * Organization
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bouw7 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Organization Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Organization implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Organization';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'status' => 'int',
        'name' => 'string',
        'street_name' => 'string',
        'house_number' => 'string',
        'zip_code' => 'string',
        'city' => 'string',
        'country' => 'string',
        'email_address' => 'string',
        'website' => 'string',
        'phone_number' => 'string',
        'iban' => 'string',
        'vat_number' => 'string',
        'gln_number' => 'string',
        'coc_number' => 'string',
        'logo' => '\Swagger\Client\Model\File',
        'note' => 'string',
        'should_copy_project_description' => 'bool',
        'language' => 'string',
        'currency' => 'string',
        'hourly_rate' => 'string',
        'selling_hourly_rate' => 'string',
        'prognosis_hourly_rate' => 'string',
        'expiration_reminder' => 'int',
        'contact_first_name' => 'string',
        'contact_last_name' => 'string',
        'invoice_mail' => 'string',
        'alternative_address_position' => 'bool',
        'require_hour_log_times' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'status' => null,
        'name' => null,
        'street_name' => null,
        'house_number' => null,
        'zip_code' => null,
        'city' => null,
        'country' => null,
        'email_address' => null,
        'website' => null,
        'phone_number' => null,
        'iban' => null,
        'vat_number' => null,
        'gln_number' => null,
        'coc_number' => null,
        'logo' => null,
        'note' => null,
        'should_copy_project_description' => null,
        'language' => null,
        'currency' => null,
        'hourly_rate' => null,
        'selling_hourly_rate' => null,
        'prognosis_hourly_rate' => null,
        'expiration_reminder' => null,
        'contact_first_name' => null,
        'contact_last_name' => null,
        'invoice_mail' => null,
        'alternative_address_position' => null,
        'require_hour_log_times' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'status' => 'status',
        'name' => 'name',
        'street_name' => 'streetName',
        'house_number' => 'houseNumber',
        'zip_code' => 'zipCode',
        'city' => 'city',
        'country' => 'country',
        'email_address' => 'emailAddress',
        'website' => 'website',
        'phone_number' => 'phoneNumber',
        'iban' => 'iban',
        'vat_number' => 'vatNumber',
        'gln_number' => 'glnNumber',
        'coc_number' => 'cocNumber',
        'logo' => 'logo',
        'note' => 'note',
        'should_copy_project_description' => 'shouldCopyProjectDescription',
        'language' => 'language',
        'currency' => 'currency',
        'hourly_rate' => 'hourlyRate',
        'selling_hourly_rate' => 'sellingHourlyRate',
        'prognosis_hourly_rate' => 'prognosisHourlyRate',
        'expiration_reminder' => 'expirationReminder',
        'contact_first_name' => 'contactFirstName',
        'contact_last_name' => 'contactLastName',
        'invoice_mail' => 'invoiceMail',
        'alternative_address_position' => 'alternativeAddressPosition',
        'require_hour_log_times' => 'requireHourLogTimes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'status' => 'setStatus',
        'name' => 'setName',
        'street_name' => 'setStreetName',
        'house_number' => 'setHouseNumber',
        'zip_code' => 'setZipCode',
        'city' => 'setCity',
        'country' => 'setCountry',
        'email_address' => 'setEmailAddress',
        'website' => 'setWebsite',
        'phone_number' => 'setPhoneNumber',
        'iban' => 'setIban',
        'vat_number' => 'setVatNumber',
        'gln_number' => 'setGlnNumber',
        'coc_number' => 'setCocNumber',
        'logo' => 'setLogo',
        'note' => 'setNote',
        'should_copy_project_description' => 'setShouldCopyProjectDescription',
        'language' => 'setLanguage',
        'currency' => 'setCurrency',
        'hourly_rate' => 'setHourlyRate',
        'selling_hourly_rate' => 'setSellingHourlyRate',
        'prognosis_hourly_rate' => 'setPrognosisHourlyRate',
        'expiration_reminder' => 'setExpirationReminder',
        'contact_first_name' => 'setContactFirstName',
        'contact_last_name' => 'setContactLastName',
        'invoice_mail' => 'setInvoiceMail',
        'alternative_address_position' => 'setAlternativeAddressPosition',
        'require_hour_log_times' => 'setRequireHourLogTimes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'status' => 'getStatus',
        'name' => 'getName',
        'street_name' => 'getStreetName',
        'house_number' => 'getHouseNumber',
        'zip_code' => 'getZipCode',
        'city' => 'getCity',
        'country' => 'getCountry',
        'email_address' => 'getEmailAddress',
        'website' => 'getWebsite',
        'phone_number' => 'getPhoneNumber',
        'iban' => 'getIban',
        'vat_number' => 'getVatNumber',
        'gln_number' => 'getGlnNumber',
        'coc_number' => 'getCocNumber',
        'logo' => 'getLogo',
        'note' => 'getNote',
        'should_copy_project_description' => 'getShouldCopyProjectDescription',
        'language' => 'getLanguage',
        'currency' => 'getCurrency',
        'hourly_rate' => 'getHourlyRate',
        'selling_hourly_rate' => 'getSellingHourlyRate',
        'prognosis_hourly_rate' => 'getPrognosisHourlyRate',
        'expiration_reminder' => 'getExpirationReminder',
        'contact_first_name' => 'getContactFirstName',
        'contact_last_name' => 'getContactLastName',
        'invoice_mail' => 'getInvoiceMail',
        'alternative_address_position' => 'getAlternativeAddressPosition',
        'require_hour_log_times' => 'getRequireHourLogTimes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['street_name'] = isset($data['street_name']) ? $data['street_name'] : null;
        $this->container['house_number'] = isset($data['house_number']) ? $data['house_number'] : null;
        $this->container['zip_code'] = isset($data['zip_code']) ? $data['zip_code'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['website'] = isset($data['website']) ? $data['website'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['iban'] = isset($data['iban']) ? $data['iban'] : null;
        $this->container['vat_number'] = isset($data['vat_number']) ? $data['vat_number'] : null;
        $this->container['gln_number'] = isset($data['gln_number']) ? $data['gln_number'] : null;
        $this->container['coc_number'] = isset($data['coc_number']) ? $data['coc_number'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['should_copy_project_description'] = isset($data['should_copy_project_description']) ? $data['should_copy_project_description'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['hourly_rate'] = isset($data['hourly_rate']) ? $data['hourly_rate'] : null;
        $this->container['selling_hourly_rate'] = isset($data['selling_hourly_rate']) ? $data['selling_hourly_rate'] : null;
        $this->container['prognosis_hourly_rate'] = isset($data['prognosis_hourly_rate']) ? $data['prognosis_hourly_rate'] : null;
        $this->container['expiration_reminder'] = isset($data['expiration_reminder']) ? $data['expiration_reminder'] : null;
        $this->container['contact_first_name'] = isset($data['contact_first_name']) ? $data['contact_first_name'] : null;
        $this->container['contact_last_name'] = isset($data['contact_last_name']) ? $data['contact_last_name'] : null;
        $this->container['invoice_mail'] = isset($data['invoice_mail']) ? $data['invoice_mail'] : null;
        $this->container['alternative_address_position'] = isset($data['alternative_address_position']) ? $data['alternative_address_position'] : null;
        $this->container['require_hour_log_times'] = isset($data['require_hour_log_times']) ? $data['require_hour_log_times'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id The organization ID.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return int
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param int $status The status of the organization.
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The organization name.
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets street_name
     *
     * @return string
     */
    public function getStreetName()
    {
        return $this->container['street_name'];
    }

    /**
     * Sets street_name
     *
     * @param string $street_name The organization's street name.
     *
     * @return $this
     */
    public function setStreetName($street_name)
    {
        $this->container['street_name'] = $street_name;

        return $this;
    }

    /**
     * Gets house_number
     *
     * @return string
     */
    public function getHouseNumber()
    {
        return $this->container['house_number'];
    }

    /**
     * Sets house_number
     *
     * @param string $house_number The organization's house number (incl. additions).
     *
     * @return $this
     */
    public function setHouseNumber($house_number)
    {
        $this->container['house_number'] = $house_number;

        return $this;
    }

    /**
     * Gets zip_code
     *
     * @return string
     */
    public function getZipCode()
    {
        return $this->container['zip_code'];
    }

    /**
     * Sets zip_code
     *
     * @param string $zip_code The organization's zip-code.
     *
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        $this->container['zip_code'] = $zip_code;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city The organization's city.
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country The organization's country.
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address The organization's email address.
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string $website The organization's website.
     *
     * @return $this
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string $phone_number The organization's phone number.
     *
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets iban
     *
     * @return string
     */
    public function getIban()
    {
        return $this->container['iban'];
    }

    /**
     * Sets iban
     *
     * @param string $iban The organization's IBAN.
     *
     * @return $this
     */
    public function setIban($iban)
    {
        $this->container['iban'] = $iban;

        return $this;
    }

    /**
     * Gets vat_number
     *
     * @return string
     */
    public function getVatNumber()
    {
        return $this->container['vat_number'];
    }

    /**
     * Sets vat_number
     *
     * @param string $vat_number The organization's vat number.
     *
     * @return $this
     */
    public function setVatNumber($vat_number)
    {
        $this->container['vat_number'] = $vat_number;

        return $this;
    }

    /**
     * Gets gln_number
     *
     * @return string
     */
    public function getGlnNumber()
    {
        return $this->container['gln_number'];
    }

    /**
     * Sets gln_number
     *
     * @param string $gln_number The Global Location Number.
     *
     * @return $this
     */
    public function setGlnNumber($gln_number)
    {
        $this->container['gln_number'] = $gln_number;

        return $this;
    }

    /**
     * Gets coc_number
     *
     * @return string
     */
    public function getCocNumber()
    {
        return $this->container['coc_number'];
    }

    /**
     * Sets coc_number
     *
     * @param string $coc_number The organization's coc number.
     *
     * @return $this
     */
    public function setCocNumber($coc_number)
    {
        $this->container['coc_number'] = $coc_number;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return \Swagger\Client\Model\File
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param \Swagger\Client\Model\File $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note Note field for organization.
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets should_copy_project_description
     *
     * @return bool
     */
    public function getShouldCopyProjectDescription()
    {
        return $this->container['should_copy_project_description'];
    }

    /**
     * Sets should_copy_project_description
     *
     * @param bool $should_copy_project_description True if the project description should be copied to an invoice.
     *
     * @return $this
     */
    public function setShouldCopyProjectDescription($should_copy_project_description)
    {
        $this->container['should_copy_project_description'] = $should_copy_project_description;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language The locale used by this organization, e.g.: nl-NL.
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency The currency used by this organization, e.g.: EUR.
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets hourly_rate
     *
     * @return string
     */
    public function getHourlyRate()
    {
        return $this->container['hourly_rate'];
    }

    /**
     * Sets hourly_rate
     *
     * @param string $hourly_rate The hourly rate for this organization.
     *
     * @return $this
     */
    public function setHourlyRate($hourly_rate)
    {
        $this->container['hourly_rate'] = $hourly_rate;

        return $this;
    }

    /**
     * Gets selling_hourly_rate
     *
     * @return string
     */
    public function getSellingHourlyRate()
    {
        return $this->container['selling_hourly_rate'];
    }

    /**
     * Sets selling_hourly_rate
     *
     * @param string $selling_hourly_rate The selling hourly rate for this organization.
     *
     * @return $this
     */
    public function setSellingHourlyRate($selling_hourly_rate)
    {
        $this->container['selling_hourly_rate'] = $selling_hourly_rate;

        return $this;
    }

    /**
     * Gets prognosis_hourly_rate
     *
     * @return string
     */
    public function getPrognosisHourlyRate()
    {
        return $this->container['prognosis_hourly_rate'];
    }

    /**
     * Sets prognosis_hourly_rate
     *
     * @param string $prognosis_hourly_rate The prognosis hourly rate for this organization.
     *
     * @return $this
     */
    public function setPrognosisHourlyRate($prognosis_hourly_rate)
    {
        $this->container['prognosis_hourly_rate'] = $prognosis_hourly_rate;

        return $this;
    }

    /**
     * Gets expiration_reminder
     *
     * @return int
     */
    public function getExpirationReminder()
    {
        return $this->container['expiration_reminder'];
    }

    /**
     * Sets expiration_reminder
     *
     * @param int $expiration_reminder The expiration reminder days for this organization.
     *
     * @return $this
     */
    public function setExpirationReminder($expiration_reminder)
    {
        $this->container['expiration_reminder'] = $expiration_reminder;

        return $this;
    }

    /**
     * Gets contact_first_name
     *
     * @return string
     */
    public function getContactFirstName()
    {
        return $this->container['contact_first_name'];
    }

    /**
     * Sets contact_first_name
     *
     * @param string $contact_first_name The contact first name.
     *
     * @return $this
     */
    public function setContactFirstName($contact_first_name)
    {
        $this->container['contact_first_name'] = $contact_first_name;

        return $this;
    }

    /**
     * Gets contact_last_name
     *
     * @return string
     */
    public function getContactLastName()
    {
        return $this->container['contact_last_name'];
    }

    /**
     * Sets contact_last_name
     *
     * @param string $contact_last_name The contact last name.
     *
     * @return $this
     */
    public function setContactLastName($contact_last_name)
    {
        $this->container['contact_last_name'] = $contact_last_name;

        return $this;
    }

    /**
     * Gets invoice_mail
     *
     * @return string
     */
    public function getInvoiceMail()
    {
        return $this->container['invoice_mail'];
    }

    /**
     * Sets invoice_mail
     *
     * @param string $invoice_mail The invoice email address.
     *
     * @return $this
     */
    public function setInvoiceMail($invoice_mail)
    {
        $this->container['invoice_mail'] = $invoice_mail;

        return $this;
    }

    /**
     * Gets alternative_address_position
     *
     * @return bool
     */
    public function getAlternativeAddressPosition()
    {
        return $this->container['alternative_address_position'];
    }

    /**
     * Sets alternative_address_position
     *
     * @param bool $alternative_address_position Whether to show the alternative address position.
     *
     * @return $this
     */
    public function setAlternativeAddressPosition($alternative_address_position)
    {
        $this->container['alternative_address_position'] = $alternative_address_position;

        return $this;
    }

    /**
     * Gets require_hour_log_times
     *
     * @return bool
     */
    public function getRequireHourLogTimes()
    {
        return $this->container['require_hour_log_times'];
    }

    /**
     * Sets require_hour_log_times
     *
     * @param bool $require_hour_log_times Whether hour log times are enabled and therefore required for this organization.
     *
     * @return $this
     */
    public function setRequireHourLogTimes($require_hour_log_times)
    {
        $this->container['require_hour_log_times'] = $require_hour_log_times;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


