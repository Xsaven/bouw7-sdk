<?php
/**
 * CustomAttributeListItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bouw7 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * CustomAttributeListItem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomAttributeListItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CustomAttributeListItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'name' => 'string',
        'property_name' => 'string',
        'type' => 'int',
        'owner_type' => 'int',
        'is_required' => 'bool',
        'is_read_only' => 'bool',
        'is_visible_on_invoice' => 'bool',
        'is_visible_on_completion' => 'bool',
        'is_visible_on_hour_register' => 'bool',
        'is_visible_on_delivery' => 'bool',
        'is_visible_on_extra_work' => 'bool',
        'is_visible_on_garbage' => 'bool',
        'is_visible_on_material' => 'bool',
        'is_visible_on_outsourcing' => 'bool',
        'is_visible_on_checkout_document' => 'bool',
        'is_visible_on_qhse' => 'bool',
        'is_visible_on_contract' => 'bool',
        'dropdown_values' => 'string[]',
        'created_by' => '\Swagger\Client\Model\BlameableUser',
        'created_at' => 'string',
        'updated_by' => '\Swagger\Client\Model\BlameableUser',
        'updated_at' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'name' => null,
        'property_name' => null,
        'type' => null,
        'owner_type' => null,
        'is_required' => null,
        'is_read_only' => null,
        'is_visible_on_invoice' => null,
        'is_visible_on_completion' => null,
        'is_visible_on_hour_register' => null,
        'is_visible_on_delivery' => null,
        'is_visible_on_extra_work' => null,
        'is_visible_on_garbage' => null,
        'is_visible_on_material' => null,
        'is_visible_on_outsourcing' => null,
        'is_visible_on_checkout_document' => null,
        'is_visible_on_qhse' => null,
        'is_visible_on_contract' => null,
        'dropdown_values' => null,
        'created_by' => null,
        'created_at' => null,
        'updated_by' => null,
        'updated_at' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'property_name' => 'propertyName',
        'type' => 'type',
        'owner_type' => 'ownerType',
        'is_required' => 'isRequired',
        'is_read_only' => 'isReadOnly',
        'is_visible_on_invoice' => 'isVisibleOnInvoice',
        'is_visible_on_completion' => 'isVisibleOnCompletion',
        'is_visible_on_hour_register' => 'isVisibleOnHourRegister',
        'is_visible_on_delivery' => 'isVisibleOnDelivery',
        'is_visible_on_extra_work' => 'isVisibleOnExtraWork',
        'is_visible_on_garbage' => 'isVisibleOnGarbage',
        'is_visible_on_material' => 'isVisibleOnMaterial',
        'is_visible_on_outsourcing' => 'isVisibleOnOutsourcing',
        'is_visible_on_checkout_document' => 'isVisibleOnCheckoutDocument',
        'is_visible_on_qhse' => 'isVisibleOnQhse',
        'is_visible_on_contract' => 'isVisibleOnContract',
        'dropdown_values' => 'dropdownValues',
        'created_by' => 'createdBy',
        'created_at' => 'createdAt',
        'updated_by' => 'updatedBy',
        'updated_at' => 'updatedAt'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'property_name' => 'setPropertyName',
        'type' => 'setType',
        'owner_type' => 'setOwnerType',
        'is_required' => 'setIsRequired',
        'is_read_only' => 'setIsReadOnly',
        'is_visible_on_invoice' => 'setIsVisibleOnInvoice',
        'is_visible_on_completion' => 'setIsVisibleOnCompletion',
        'is_visible_on_hour_register' => 'setIsVisibleOnHourRegister',
        'is_visible_on_delivery' => 'setIsVisibleOnDelivery',
        'is_visible_on_extra_work' => 'setIsVisibleOnExtraWork',
        'is_visible_on_garbage' => 'setIsVisibleOnGarbage',
        'is_visible_on_material' => 'setIsVisibleOnMaterial',
        'is_visible_on_outsourcing' => 'setIsVisibleOnOutsourcing',
        'is_visible_on_checkout_document' => 'setIsVisibleOnCheckoutDocument',
        'is_visible_on_qhse' => 'setIsVisibleOnQhse',
        'is_visible_on_contract' => 'setIsVisibleOnContract',
        'dropdown_values' => 'setDropdownValues',
        'created_by' => 'setCreatedBy',
        'created_at' => 'setCreatedAt',
        'updated_by' => 'setUpdatedBy',
        'updated_at' => 'setUpdatedAt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'property_name' => 'getPropertyName',
        'type' => 'getType',
        'owner_type' => 'getOwnerType',
        'is_required' => 'getIsRequired',
        'is_read_only' => 'getIsReadOnly',
        'is_visible_on_invoice' => 'getIsVisibleOnInvoice',
        'is_visible_on_completion' => 'getIsVisibleOnCompletion',
        'is_visible_on_hour_register' => 'getIsVisibleOnHourRegister',
        'is_visible_on_delivery' => 'getIsVisibleOnDelivery',
        'is_visible_on_extra_work' => 'getIsVisibleOnExtraWork',
        'is_visible_on_garbage' => 'getIsVisibleOnGarbage',
        'is_visible_on_material' => 'getIsVisibleOnMaterial',
        'is_visible_on_outsourcing' => 'getIsVisibleOnOutsourcing',
        'is_visible_on_checkout_document' => 'getIsVisibleOnCheckoutDocument',
        'is_visible_on_qhse' => 'getIsVisibleOnQhse',
        'is_visible_on_contract' => 'getIsVisibleOnContract',
        'dropdown_values' => 'getDropdownValues',
        'created_by' => 'getCreatedBy',
        'created_at' => 'getCreatedAt',
        'updated_by' => 'getUpdatedBy',
        'updated_at' => 'getUpdatedAt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['property_name'] = isset($data['property_name']) ? $data['property_name'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['owner_type'] = isset($data['owner_type']) ? $data['owner_type'] : null;
        $this->container['is_required'] = isset($data['is_required']) ? $data['is_required'] : null;
        $this->container['is_read_only'] = isset($data['is_read_only']) ? $data['is_read_only'] : null;
        $this->container['is_visible_on_invoice'] = isset($data['is_visible_on_invoice']) ? $data['is_visible_on_invoice'] : null;
        $this->container['is_visible_on_completion'] = isset($data['is_visible_on_completion']) ? $data['is_visible_on_completion'] : null;
        $this->container['is_visible_on_hour_register'] = isset($data['is_visible_on_hour_register']) ? $data['is_visible_on_hour_register'] : null;
        $this->container['is_visible_on_delivery'] = isset($data['is_visible_on_delivery']) ? $data['is_visible_on_delivery'] : null;
        $this->container['is_visible_on_extra_work'] = isset($data['is_visible_on_extra_work']) ? $data['is_visible_on_extra_work'] : null;
        $this->container['is_visible_on_garbage'] = isset($data['is_visible_on_garbage']) ? $data['is_visible_on_garbage'] : null;
        $this->container['is_visible_on_material'] = isset($data['is_visible_on_material']) ? $data['is_visible_on_material'] : null;
        $this->container['is_visible_on_outsourcing'] = isset($data['is_visible_on_outsourcing']) ? $data['is_visible_on_outsourcing'] : null;
        $this->container['is_visible_on_checkout_document'] = isset($data['is_visible_on_checkout_document']) ? $data['is_visible_on_checkout_document'] : null;
        $this->container['is_visible_on_qhse'] = isset($data['is_visible_on_qhse']) ? $data['is_visible_on_qhse'] : null;
        $this->container['is_visible_on_contract'] = isset($data['is_visible_on_contract']) ? $data['is_visible_on_contract'] : null;
        $this->container['dropdown_values'] = isset($data['dropdown_values']) ? $data['dropdown_values'] : null;
        $this->container['created_by'] = isset($data['created_by']) ? $data['created_by'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_by'] = isset($data['updated_by']) ? $data['updated_by'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id The ID of this custom attribute.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The name of this custom attribute.
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets property_name
     *
     * @return string
     */
    public function getPropertyName()
    {
        return $this->container['property_name'];
    }

    /**
     * Sets property_name
     *
     * @param string $property_name The name of the property as it will be displayed on associated list items.
     *
     * @return $this
     */
    public function setPropertyName($property_name)
    {
        $this->container['property_name'] = $property_name;

        return $this;
    }

    /**
     * Gets type
     *
     * @return int
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param int $type The type of this field. (0 = Text field, 1 = Textarea, 2 = Checkbox, 3 = Date-picker, 4 = Date-Time-picker, 6 = Employee, 7 = Contact)
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets owner_type
     *
     * @return int
     */
    public function getOwnerType()
    {
        return $this->container['owner_type'];
    }

    /**
     * Sets owner_type
     *
     * @param int $owner_type The type of owner this custom attribute should be associated with. (0 = Project, 1 = Contact, 2 = Journal-day, 3 = Employee)
     *
     * @return $this
     */
    public function setOwnerType($owner_type)
    {
        $this->container['owner_type'] = $owner_type;

        return $this;
    }

    /**
     * Gets is_required
     *
     * @return bool
     */
    public function getIsRequired()
    {
        return $this->container['is_required'];
    }

    /**
     * Sets is_required
     *
     * @param bool $is_required Whether this custom attribute is a required form field.
     *
     * @return $this
     */
    public function setIsRequired($is_required)
    {
        $this->container['is_required'] = $is_required;

        return $this;
    }

    /**
     * Gets is_read_only
     *
     * @return bool
     */
    public function getIsReadOnly()
    {
        return $this->container['is_read_only'];
    }

    /**
     * Sets is_read_only
     *
     * @param bool $is_read_only Whether this custom attribute is a read-only field.
     *
     * @return $this
     */
    public function setIsReadOnly($is_read_only)
    {
        $this->container['is_read_only'] = $is_read_only;

        return $this;
    }

    /**
     * Gets is_visible_on_invoice
     *
     * @return bool
     */
    public function getIsVisibleOnInvoice()
    {
        return $this->container['is_visible_on_invoice'];
    }

    /**
     * Sets is_visible_on_invoice
     *
     * @param bool $is_visible_on_invoice Whether this custom attribute is visible on invoices.
     *
     * @return $this
     */
    public function setIsVisibleOnInvoice($is_visible_on_invoice)
    {
        $this->container['is_visible_on_invoice'] = $is_visible_on_invoice;

        return $this;
    }

    /**
     * Gets is_visible_on_completion
     *
     * @return bool
     */
    public function getIsVisibleOnCompletion()
    {
        return $this->container['is_visible_on_completion'];
    }

    /**
     * Sets is_visible_on_completion
     *
     * @param bool $is_visible_on_completion Whether this custom attribute is visible on project completion.
     *
     * @return $this
     */
    public function setIsVisibleOnCompletion($is_visible_on_completion)
    {
        $this->container['is_visible_on_completion'] = $is_visible_on_completion;

        return $this;
    }

    /**
     * Gets is_visible_on_hour_register
     *
     * @return bool
     */
    public function getIsVisibleOnHourRegister()
    {
        return $this->container['is_visible_on_hour_register'];
    }

    /**
     * Sets is_visible_on_hour_register
     *
     * @param bool $is_visible_on_hour_register Whether this custom attribute is visible on hour register documents.
     *
     * @return $this
     */
    public function setIsVisibleOnHourRegister($is_visible_on_hour_register)
    {
        $this->container['is_visible_on_hour_register'] = $is_visible_on_hour_register;

        return $this;
    }

    /**
     * Gets is_visible_on_delivery
     *
     * @return bool
     */
    public function getIsVisibleOnDelivery()
    {
        return $this->container['is_visible_on_delivery'];
    }

    /**
     * Sets is_visible_on_delivery
     *
     * @param bool $is_visible_on_delivery Whether this custom attribute is visible on delivery documents.
     *
     * @return $this
     */
    public function setIsVisibleOnDelivery($is_visible_on_delivery)
    {
        $this->container['is_visible_on_delivery'] = $is_visible_on_delivery;

        return $this;
    }

    /**
     * Gets is_visible_on_extra_work
     *
     * @return bool
     */
    public function getIsVisibleOnExtraWork()
    {
        return $this->container['is_visible_on_extra_work'];
    }

    /**
     * Sets is_visible_on_extra_work
     *
     * @param bool $is_visible_on_extra_work Whether this custom attribute is visible on extra work documents.
     *
     * @return $this
     */
    public function setIsVisibleOnExtraWork($is_visible_on_extra_work)
    {
        $this->container['is_visible_on_extra_work'] = $is_visible_on_extra_work;

        return $this;
    }

    /**
     * Gets is_visible_on_garbage
     *
     * @return bool
     */
    public function getIsVisibleOnGarbage()
    {
        return $this->container['is_visible_on_garbage'];
    }

    /**
     * Sets is_visible_on_garbage
     *
     * @param bool $is_visible_on_garbage Whether this custom attribute is visible on waste objects.
     *
     * @return $this
     */
    public function setIsVisibleOnGarbage($is_visible_on_garbage)
    {
        $this->container['is_visible_on_garbage'] = $is_visible_on_garbage;

        return $this;
    }

    /**
     * Gets is_visible_on_material
     *
     * @return bool
     */
    public function getIsVisibleOnMaterial()
    {
        return $this->container['is_visible_on_material'];
    }

    /**
     * Sets is_visible_on_material
     *
     * @param bool $is_visible_on_material Whether this custom attribute is visible on material objects.
     *
     * @return $this
     */
    public function setIsVisibleOnMaterial($is_visible_on_material)
    {
        $this->container['is_visible_on_material'] = $is_visible_on_material;

        return $this;
    }

    /**
     * Gets is_visible_on_outsourcing
     *
     * @return bool
     */
    public function getIsVisibleOnOutsourcing()
    {
        return $this->container['is_visible_on_outsourcing'];
    }

    /**
     * Sets is_visible_on_outsourcing
     *
     * @param bool $is_visible_on_outsourcing Whether this custom attribute is visible on outsourced objects.
     *
     * @return $this
     */
    public function setIsVisibleOnOutsourcing($is_visible_on_outsourcing)
    {
        $this->container['is_visible_on_outsourcing'] = $is_visible_on_outsourcing;

        return $this;
    }

    /**
     * Gets is_visible_on_checkout_document
     *
     * @return bool
     */
    public function getIsVisibleOnCheckoutDocument()
    {
        return $this->container['is_visible_on_checkout_document'];
    }

    /**
     * Sets is_visible_on_checkout_document
     *
     * @param bool $is_visible_on_checkout_document Whether this custom attribute is visible on checkout documents.
     *
     * @return $this
     */
    public function setIsVisibleOnCheckoutDocument($is_visible_on_checkout_document)
    {
        $this->container['is_visible_on_checkout_document'] = $is_visible_on_checkout_document;

        return $this;
    }

    /**
     * Gets is_visible_on_qhse
     *
     * @return bool
     */
    public function getIsVisibleOnQhse()
    {
        return $this->container['is_visible_on_qhse'];
    }

    /**
     * Sets is_visible_on_qhse
     *
     * @param bool $is_visible_on_qhse Whether this custom attribute is visible on QHSE documents.
     *
     * @return $this
     */
    public function setIsVisibleOnQhse($is_visible_on_qhse)
    {
        $this->container['is_visible_on_qhse'] = $is_visible_on_qhse;

        return $this;
    }

    /**
     * Gets is_visible_on_contract
     *
     * @return bool
     */
    public function getIsVisibleOnContract()
    {
        return $this->container['is_visible_on_contract'];
    }

    /**
     * Sets is_visible_on_contract
     *
     * @param bool $is_visible_on_contract Whether this custom attribute is visible on contracts.
     *
     * @return $this
     */
    public function setIsVisibleOnContract($is_visible_on_contract)
    {
        $this->container['is_visible_on_contract'] = $is_visible_on_contract;

        return $this;
    }

    /**
     * Gets dropdown_values
     *
     * @return string[]
     */
    public function getDropdownValues()
    {
        return $this->container['dropdown_values'];
    }

    /**
     * Sets dropdown_values
     *
     * @param string[] $dropdown_values The dropdown values for the custom attribute.
     *
     * @return $this
     */
    public function setDropdownValues($dropdown_values)
    {
        $this->container['dropdown_values'] = $dropdown_values;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return \Swagger\Client\Model\BlameableUser
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param \Swagger\Client\Model\BlameableUser $created_by created_by
     *
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at The creation date of the object in ATOM/ISO-8601 format
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_by
     *
     * @return \Swagger\Client\Model\BlameableUser
     */
    public function getUpdatedBy()
    {
        return $this->container['updated_by'];
    }

    /**
     * Sets updated_by
     *
     * @param \Swagger\Client\Model\BlameableUser $updated_by updated_by
     *
     * @return $this
     */
    public function setUpdatedBy($updated_by)
    {
        $this->container['updated_by'] = $updated_by;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at The creation date of the object in ATOM/ISO-8601 format
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


