<?php
/**
 * SubcontractorContractTermListItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bouw7 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SubcontractorContractTermListItem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SubcontractorContractTermListItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SubcontractorContractTermListItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'project_name' => 'string',
        'project_id' => 'int',
        'supplier_name' => 'string',
        'supplier_id' => 'int',
        'project_security_link_id' => 'int',
        'project_security_link_name' => 'int',
        'contract_project_security_link_id' => 'int',
        'contract_project_security_link_name' => 'int',
        'contract_number' => 'string',
        'contract_name' => 'string',
        'contract_id' => 'int',
        'number' => 'string',
        'description' => 'string',
        'amount' => 'string',
        'amount_to_receive' => 'string',
        'cost' => 'string',
        'cost_to_receive' => 'string',
        'cost_received' => 'string',
        'is_paid' => 'bool',
        'is_approved' => 'bool',
        'created_by' => '\Swagger\Client\Model\BlameableUser',
        'created_at' => 'string',
        'updated_by' => '\Swagger\Client\Model\BlameableUser',
        'updated_at' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'project_name' => null,
        'project_id' => null,
        'supplier_name' => null,
        'supplier_id' => null,
        'project_security_link_id' => null,
        'project_security_link_name' => null,
        'contract_project_security_link_id' => null,
        'contract_project_security_link_name' => null,
        'contract_number' => null,
        'contract_name' => null,
        'contract_id' => null,
        'number' => null,
        'description' => null,
        'amount' => null,
        'amount_to_receive' => null,
        'cost' => null,
        'cost_to_receive' => null,
        'cost_received' => null,
        'is_paid' => null,
        'is_approved' => null,
        'created_by' => null,
        'created_at' => null,
        'updated_by' => null,
        'updated_at' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'project_name' => 'projectName',
        'project_id' => 'projectId',
        'supplier_name' => 'supplierName',
        'supplier_id' => 'supplierId',
        'project_security_link_id' => 'projectSecurityLinkId',
        'project_security_link_name' => 'projectSecurityLinkName',
        'contract_project_security_link_id' => 'contractProjectSecurityLinkId',
        'contract_project_security_link_name' => 'contractProjectSecurityLinkName',
        'contract_number' => 'contractNumber',
        'contract_name' => 'contractName',
        'contract_id' => 'contractId',
        'number' => 'number',
        'description' => 'description',
        'amount' => 'amount',
        'amount_to_receive' => 'amountToReceive',
        'cost' => 'cost',
        'cost_to_receive' => 'costToReceive',
        'cost_received' => 'costReceived',
        'is_paid' => 'isPaid',
        'is_approved' => 'isApproved',
        'created_by' => 'createdBy',
        'created_at' => 'createdAt',
        'updated_by' => 'updatedBy',
        'updated_at' => 'updatedAt'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'project_name' => 'setProjectName',
        'project_id' => 'setProjectId',
        'supplier_name' => 'setSupplierName',
        'supplier_id' => 'setSupplierId',
        'project_security_link_id' => 'setProjectSecurityLinkId',
        'project_security_link_name' => 'setProjectSecurityLinkName',
        'contract_project_security_link_id' => 'setContractProjectSecurityLinkId',
        'contract_project_security_link_name' => 'setContractProjectSecurityLinkName',
        'contract_number' => 'setContractNumber',
        'contract_name' => 'setContractName',
        'contract_id' => 'setContractId',
        'number' => 'setNumber',
        'description' => 'setDescription',
        'amount' => 'setAmount',
        'amount_to_receive' => 'setAmountToReceive',
        'cost' => 'setCost',
        'cost_to_receive' => 'setCostToReceive',
        'cost_received' => 'setCostReceived',
        'is_paid' => 'setIsPaid',
        'is_approved' => 'setIsApproved',
        'created_by' => 'setCreatedBy',
        'created_at' => 'setCreatedAt',
        'updated_by' => 'setUpdatedBy',
        'updated_at' => 'setUpdatedAt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'project_name' => 'getProjectName',
        'project_id' => 'getProjectId',
        'supplier_name' => 'getSupplierName',
        'supplier_id' => 'getSupplierId',
        'project_security_link_id' => 'getProjectSecurityLinkId',
        'project_security_link_name' => 'getProjectSecurityLinkName',
        'contract_project_security_link_id' => 'getContractProjectSecurityLinkId',
        'contract_project_security_link_name' => 'getContractProjectSecurityLinkName',
        'contract_number' => 'getContractNumber',
        'contract_name' => 'getContractName',
        'contract_id' => 'getContractId',
        'number' => 'getNumber',
        'description' => 'getDescription',
        'amount' => 'getAmount',
        'amount_to_receive' => 'getAmountToReceive',
        'cost' => 'getCost',
        'cost_to_receive' => 'getCostToReceive',
        'cost_received' => 'getCostReceived',
        'is_paid' => 'getIsPaid',
        'is_approved' => 'getIsApproved',
        'created_by' => 'getCreatedBy',
        'created_at' => 'getCreatedAt',
        'updated_by' => 'getUpdatedBy',
        'updated_at' => 'getUpdatedAt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['project_id'] = isset($data['project_id']) ? $data['project_id'] : null;
        $this->container['supplier_name'] = isset($data['supplier_name']) ? $data['supplier_name'] : null;
        $this->container['supplier_id'] = isset($data['supplier_id']) ? $data['supplier_id'] : null;
        $this->container['project_security_link_id'] = isset($data['project_security_link_id']) ? $data['project_security_link_id'] : null;
        $this->container['project_security_link_name'] = isset($data['project_security_link_name']) ? $data['project_security_link_name'] : null;
        $this->container['contract_project_security_link_id'] = isset($data['contract_project_security_link_id']) ? $data['contract_project_security_link_id'] : null;
        $this->container['contract_project_security_link_name'] = isset($data['contract_project_security_link_name']) ? $data['contract_project_security_link_name'] : null;
        $this->container['contract_number'] = isset($data['contract_number']) ? $data['contract_number'] : null;
        $this->container['contract_name'] = isset($data['contract_name']) ? $data['contract_name'] : null;
        $this->container['contract_id'] = isset($data['contract_id']) ? $data['contract_id'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['amount_to_receive'] = isset($data['amount_to_receive']) ? $data['amount_to_receive'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['cost_to_receive'] = isset($data['cost_to_receive']) ? $data['cost_to_receive'] : null;
        $this->container['cost_received'] = isset($data['cost_received']) ? $data['cost_received'] : null;
        $this->container['is_paid'] = isset($data['is_paid']) ? $data['is_paid'] : null;
        $this->container['is_approved'] = isset($data['is_approved']) ? $data['is_approved'] : null;
        $this->container['created_by'] = isset($data['created_by']) ? $data['created_by'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_by'] = isset($data['updated_by']) ? $data['updated_by'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id The ID this contract term.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name The name of the project of this contract term.
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets project_id
     *
     * @return int
     */
    public function getProjectId()
    {
        return $this->container['project_id'];
    }

    /**
     * Sets project_id
     *
     * @param int $project_id The ID of the project of this contract term.
     *
     * @return $this
     */
    public function setProjectId($project_id)
    {
        $this->container['project_id'] = $project_id;

        return $this;
    }

    /**
     * Gets supplier_name
     *
     * @return string
     */
    public function getSupplierName()
    {
        return $this->container['supplier_name'];
    }

    /**
     * Sets supplier_name
     *
     * @param string $supplier_name The name of the supplier of this contract term.
     *
     * @return $this
     */
    public function setSupplierName($supplier_name)
    {
        $this->container['supplier_name'] = $supplier_name;

        return $this;
    }

    /**
     * Gets supplier_id
     *
     * @return int
     */
    public function getSupplierId()
    {
        return $this->container['supplier_id'];
    }

    /**
     * Sets supplier_id
     *
     * @param int $supplier_id The ID of the supplier of this contract term.
     *
     * @return $this
     */
    public function setSupplierId($supplier_id)
    {
        $this->container['supplier_id'] = $supplier_id;

        return $this;
    }

    /**
     * Gets project_security_link_id
     *
     * @return int
     */
    public function getProjectSecurityLinkId()
    {
        return $this->container['project_security_link_id'];
    }

    /**
     * Sets project_security_link_id
     *
     * @param int $project_security_link_id The ID of the project security link of this contract term.
     *
     * @return $this
     */
    public function setProjectSecurityLinkId($project_security_link_id)
    {
        $this->container['project_security_link_id'] = $project_security_link_id;

        return $this;
    }

    /**
     * Gets project_security_link_name
     *
     * @return int
     */
    public function getProjectSecurityLinkName()
    {
        return $this->container['project_security_link_name'];
    }

    /**
     * Sets project_security_link_name
     *
     * @param int $project_security_link_name The name of the project security link of this contract term.
     *
     * @return $this
     */
    public function setProjectSecurityLinkName($project_security_link_name)
    {
        $this->container['project_security_link_name'] = $project_security_link_name;

        return $this;
    }

    /**
     * Gets contract_project_security_link_id
     *
     * @return int
     */
    public function getContractProjectSecurityLinkId()
    {
        return $this->container['contract_project_security_link_id'];
    }

    /**
     * Sets contract_project_security_link_id
     *
     * @param int $contract_project_security_link_id The ID of the project security link of the contract of this contract term.
     *
     * @return $this
     */
    public function setContractProjectSecurityLinkId($contract_project_security_link_id)
    {
        $this->container['contract_project_security_link_id'] = $contract_project_security_link_id;

        return $this;
    }

    /**
     * Gets contract_project_security_link_name
     *
     * @return int
     */
    public function getContractProjectSecurityLinkName()
    {
        return $this->container['contract_project_security_link_name'];
    }

    /**
     * Sets contract_project_security_link_name
     *
     * @param int $contract_project_security_link_name The name of the project security link of the contract of this contract term.
     *
     * @return $this
     */
    public function setContractProjectSecurityLinkName($contract_project_security_link_name)
    {
        $this->container['contract_project_security_link_name'] = $contract_project_security_link_name;

        return $this;
    }

    /**
     * Gets contract_number
     *
     * @return string
     */
    public function getContractNumber()
    {
        return $this->container['contract_number'];
    }

    /**
     * Sets contract_number
     *
     * @param string $contract_number The number of the contract of this contract term.
     *
     * @return $this
     */
    public function setContractNumber($contract_number)
    {
        $this->container['contract_number'] = $contract_number;

        return $this;
    }

    /**
     * Gets contract_name
     *
     * @return string
     */
    public function getContractName()
    {
        return $this->container['contract_name'];
    }

    /**
     * Sets contract_name
     *
     * @param string $contract_name The name of the contract of this contract term.
     *
     * @return $this
     */
    public function setContractName($contract_name)
    {
        $this->container['contract_name'] = $contract_name;

        return $this;
    }

    /**
     * Gets contract_id
     *
     * @return int
     */
    public function getContractId()
    {
        return $this->container['contract_id'];
    }

    /**
     * Sets contract_id
     *
     * @param int $contract_id The ID of the contract of this contract term.
     *
     * @return $this
     */
    public function setContractId($contract_id)
    {
        $this->container['contract_id'] = $contract_id;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number The number of this contract term.
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description The description of this contract term.
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return string
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param string $amount The amount of this contract term.
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets amount_to_receive
     *
     * @return string
     */
    public function getAmountToReceive()
    {
        return $this->container['amount_to_receive'];
    }

    /**
     * Sets amount_to_receive
     *
     * @param string $amount_to_receive The amount to receive of this contract term.
     *
     * @return $this
     */
    public function setAmountToReceive($amount_to_receive)
    {
        $this->container['amount_to_receive'] = $amount_to_receive;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return string
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param string $cost The cost of this contract term.
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets cost_to_receive
     *
     * @return string
     */
    public function getCostToReceive()
    {
        return $this->container['cost_to_receive'];
    }

    /**
     * Sets cost_to_receive
     *
     * @param string $cost_to_receive The cost to receive of this contract term.
     *
     * @return $this
     */
    public function setCostToReceive($cost_to_receive)
    {
        $this->container['cost_to_receive'] = $cost_to_receive;

        return $this;
    }

    /**
     * Gets cost_received
     *
     * @return string
     */
    public function getCostReceived()
    {
        return $this->container['cost_received'];
    }

    /**
     * Sets cost_received
     *
     * @param string $cost_received The received cost of this contract term.
     *
     * @return $this
     */
    public function setCostReceived($cost_received)
    {
        $this->container['cost_received'] = $cost_received;

        return $this;
    }

    /**
     * Gets is_paid
     *
     * @return bool
     */
    public function getIsPaid()
    {
        return $this->container['is_paid'];
    }

    /**
     * Sets is_paid
     *
     * @param bool $is_paid Whether this contract term is paid.
     *
     * @return $this
     */
    public function setIsPaid($is_paid)
    {
        $this->container['is_paid'] = $is_paid;

        return $this;
    }

    /**
     * Gets is_approved
     *
     * @return bool
     */
    public function getIsApproved()
    {
        return $this->container['is_approved'];
    }

    /**
     * Sets is_approved
     *
     * @param bool $is_approved Whether this this contract term is approved.
     *
     * @return $this
     */
    public function setIsApproved($is_approved)
    {
        $this->container['is_approved'] = $is_approved;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return \Swagger\Client\Model\BlameableUser
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param \Swagger\Client\Model\BlameableUser $created_by created_by
     *
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at The creation date of the object in ATOM/ISO-8601 format
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_by
     *
     * @return \Swagger\Client\Model\BlameableUser
     */
    public function getUpdatedBy()
    {
        return $this->container['updated_by'];
    }

    /**
     * Sets updated_by
     *
     * @param \Swagger\Client\Model\BlameableUser $updated_by updated_by
     *
     * @return $this
     */
    public function setUpdatedBy($updated_by)
    {
        $this->container['updated_by'] = $updated_by;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at The creation date of the object in ATOM/ISO-8601 format
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


