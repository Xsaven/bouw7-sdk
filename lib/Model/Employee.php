<?php
/**
 * Employee
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bouw7 API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Employee Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Employee implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Employee';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'first_name' => 'string',
        'last_name' => 'string',
        'department' => '\Swagger\Client\Model\CondensedDepartment',
        'employee_mail' => 'string',
        'address' => 'string',
        'zip_code' => 'string',
        'city' => 'string',
        'phone_number' => 'string',
        'birth_date' => 'string',
        'workload' => 'string',
        'hourly_rate' => 'string',
        'selling_hourly_rate' => 'string',
        'bsn' => 'string',
        'function' => 'string',
        'date_of_employment' => 'string',
        'date_of_resignation' => 'string',
        'external' => 'bool',
        'afas_warehouse' => 'string',
        'hour_type_prices' => '\Swagger\Client\Model\HourTypePrice[]',
        'workhours_monday' => 'string',
        'workhours_tuesday' => 'string',
        'workhours_wednesday' => 'string',
        'workhours_thursday' => 'string',
        'workhours_friday' => 'string',
        'workhours_saturday' => 'string',
        'workhours_sunday' => 'string',
        'avatar_file_hash' => 'string',
        'signature_file_hash' => 'string',
        'payroll_division' => '\Swagger\Client\Model\CondensedDivision',
        'scab_id' => 'string',
        'scab_employee_id' => 'int',
        'username' => 'string',
        'user_type' => 'int',
        'user_invitation_sent_at' => 'string',
        'user_activated_at' => 'string',
        'created_at' => 'string',
        'created_by' => 'string',
        'updated_at' => 'string',
        'updated_by' => 'string',
        'custom_attribute_values' => '\Swagger\Client\Model\CondensedCustomAttributeValue[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'first_name' => null,
        'last_name' => null,
        'department' => null,
        'employee_mail' => null,
        'address' => null,
        'zip_code' => null,
        'city' => null,
        'phone_number' => null,
        'birth_date' => null,
        'workload' => null,
        'hourly_rate' => null,
        'selling_hourly_rate' => null,
        'bsn' => null,
        'function' => null,
        'date_of_employment' => null,
        'date_of_resignation' => null,
        'external' => null,
        'afas_warehouse' => null,
        'hour_type_prices' => null,
        'workhours_monday' => null,
        'workhours_tuesday' => null,
        'workhours_wednesday' => null,
        'workhours_thursday' => null,
        'workhours_friday' => null,
        'workhours_saturday' => null,
        'workhours_sunday' => null,
        'avatar_file_hash' => null,
        'signature_file_hash' => null,
        'payroll_division' => null,
        'scab_id' => null,
        'scab_employee_id' => null,
        'username' => null,
        'user_type' => null,
        'user_invitation_sent_at' => null,
        'user_activated_at' => null,
        'created_at' => null,
        'created_by' => null,
        'updated_at' => null,
        'updated_by' => null,
        'custom_attribute_values' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'first_name' => 'firstName',
        'last_name' => 'lastName',
        'department' => 'department',
        'employee_mail' => 'employeeMail',
        'address' => 'address',
        'zip_code' => 'zipCode',
        'city' => 'city',
        'phone_number' => 'phoneNumber',
        'birth_date' => 'birthDate',
        'workload' => 'workload',
        'hourly_rate' => 'hourlyRate',
        'selling_hourly_rate' => 'sellingHourlyRate',
        'bsn' => 'bsn',
        'function' => 'function',
        'date_of_employment' => 'dateOfEmployment',
        'date_of_resignation' => 'dateOfResignation',
        'external' => 'external',
        'afas_warehouse' => 'afasWarehouse',
        'hour_type_prices' => 'hourTypePrices',
        'workhours_monday' => 'workhoursMonday',
        'workhours_tuesday' => 'workhoursTuesday',
        'workhours_wednesday' => 'workhoursWednesday',
        'workhours_thursday' => 'workhoursThursday',
        'workhours_friday' => 'workhoursFriday',
        'workhours_saturday' => 'workhoursSaturday',
        'workhours_sunday' => 'workhoursSunday',
        'avatar_file_hash' => 'avatarFileHash',
        'signature_file_hash' => 'signatureFileHash',
        'payroll_division' => 'payrollDivision',
        'scab_id' => 'scabId',
        'scab_employee_id' => 'scabEmployeeId',
        'username' => 'username',
        'user_type' => 'userType',
        'user_invitation_sent_at' => 'userInvitationSentAt',
        'user_activated_at' => 'userActivatedAt',
        'created_at' => 'createdAt',
        'created_by' => 'createdBy',
        'updated_at' => 'updatedAt',
        'updated_by' => 'updatedBy',
        'custom_attribute_values' => 'customAttributeValues'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'department' => 'setDepartment',
        'employee_mail' => 'setEmployeeMail',
        'address' => 'setAddress',
        'zip_code' => 'setZipCode',
        'city' => 'setCity',
        'phone_number' => 'setPhoneNumber',
        'birth_date' => 'setBirthDate',
        'workload' => 'setWorkload',
        'hourly_rate' => 'setHourlyRate',
        'selling_hourly_rate' => 'setSellingHourlyRate',
        'bsn' => 'setBsn',
        'function' => 'setFunction',
        'date_of_employment' => 'setDateOfEmployment',
        'date_of_resignation' => 'setDateOfResignation',
        'external' => 'setExternal',
        'afas_warehouse' => 'setAfasWarehouse',
        'hour_type_prices' => 'setHourTypePrices',
        'workhours_monday' => 'setWorkhoursMonday',
        'workhours_tuesday' => 'setWorkhoursTuesday',
        'workhours_wednesday' => 'setWorkhoursWednesday',
        'workhours_thursday' => 'setWorkhoursThursday',
        'workhours_friday' => 'setWorkhoursFriday',
        'workhours_saturday' => 'setWorkhoursSaturday',
        'workhours_sunday' => 'setWorkhoursSunday',
        'avatar_file_hash' => 'setAvatarFileHash',
        'signature_file_hash' => 'setSignatureFileHash',
        'payroll_division' => 'setPayrollDivision',
        'scab_id' => 'setScabId',
        'scab_employee_id' => 'setScabEmployeeId',
        'username' => 'setUsername',
        'user_type' => 'setUserType',
        'user_invitation_sent_at' => 'setUserInvitationSentAt',
        'user_activated_at' => 'setUserActivatedAt',
        'created_at' => 'setCreatedAt',
        'created_by' => 'setCreatedBy',
        'updated_at' => 'setUpdatedAt',
        'updated_by' => 'setUpdatedBy',
        'custom_attribute_values' => 'setCustomAttributeValues'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'department' => 'getDepartment',
        'employee_mail' => 'getEmployeeMail',
        'address' => 'getAddress',
        'zip_code' => 'getZipCode',
        'city' => 'getCity',
        'phone_number' => 'getPhoneNumber',
        'birth_date' => 'getBirthDate',
        'workload' => 'getWorkload',
        'hourly_rate' => 'getHourlyRate',
        'selling_hourly_rate' => 'getSellingHourlyRate',
        'bsn' => 'getBsn',
        'function' => 'getFunction',
        'date_of_employment' => 'getDateOfEmployment',
        'date_of_resignation' => 'getDateOfResignation',
        'external' => 'getExternal',
        'afas_warehouse' => 'getAfasWarehouse',
        'hour_type_prices' => 'getHourTypePrices',
        'workhours_monday' => 'getWorkhoursMonday',
        'workhours_tuesday' => 'getWorkhoursTuesday',
        'workhours_wednesday' => 'getWorkhoursWednesday',
        'workhours_thursday' => 'getWorkhoursThursday',
        'workhours_friday' => 'getWorkhoursFriday',
        'workhours_saturday' => 'getWorkhoursSaturday',
        'workhours_sunday' => 'getWorkhoursSunday',
        'avatar_file_hash' => 'getAvatarFileHash',
        'signature_file_hash' => 'getSignatureFileHash',
        'payroll_division' => 'getPayrollDivision',
        'scab_id' => 'getScabId',
        'scab_employee_id' => 'getScabEmployeeId',
        'username' => 'getUsername',
        'user_type' => 'getUserType',
        'user_invitation_sent_at' => 'getUserInvitationSentAt',
        'user_activated_at' => 'getUserActivatedAt',
        'created_at' => 'getCreatedAt',
        'created_by' => 'getCreatedBy',
        'updated_at' => 'getUpdatedAt',
        'updated_by' => 'getUpdatedBy',
        'custom_attribute_values' => 'getCustomAttributeValues'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['employee_mail'] = isset($data['employee_mail']) ? $data['employee_mail'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['zip_code'] = isset($data['zip_code']) ? $data['zip_code'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['birth_date'] = isset($data['birth_date']) ? $data['birth_date'] : null;
        $this->container['workload'] = isset($data['workload']) ? $data['workload'] : null;
        $this->container['hourly_rate'] = isset($data['hourly_rate']) ? $data['hourly_rate'] : null;
        $this->container['selling_hourly_rate'] = isset($data['selling_hourly_rate']) ? $data['selling_hourly_rate'] : null;
        $this->container['bsn'] = isset($data['bsn']) ? $data['bsn'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['date_of_employment'] = isset($data['date_of_employment']) ? $data['date_of_employment'] : null;
        $this->container['date_of_resignation'] = isset($data['date_of_resignation']) ? $data['date_of_resignation'] : null;
        $this->container['external'] = isset($data['external']) ? $data['external'] : null;
        $this->container['afas_warehouse'] = isset($data['afas_warehouse']) ? $data['afas_warehouse'] : null;
        $this->container['hour_type_prices'] = isset($data['hour_type_prices']) ? $data['hour_type_prices'] : null;
        $this->container['workhours_monday'] = isset($data['workhours_monday']) ? $data['workhours_monday'] : null;
        $this->container['workhours_tuesday'] = isset($data['workhours_tuesday']) ? $data['workhours_tuesday'] : null;
        $this->container['workhours_wednesday'] = isset($data['workhours_wednesday']) ? $data['workhours_wednesday'] : null;
        $this->container['workhours_thursday'] = isset($data['workhours_thursday']) ? $data['workhours_thursday'] : null;
        $this->container['workhours_friday'] = isset($data['workhours_friday']) ? $data['workhours_friday'] : null;
        $this->container['workhours_saturday'] = isset($data['workhours_saturday']) ? $data['workhours_saturday'] : null;
        $this->container['workhours_sunday'] = isset($data['workhours_sunday']) ? $data['workhours_sunday'] : null;
        $this->container['avatar_file_hash'] = isset($data['avatar_file_hash']) ? $data['avatar_file_hash'] : null;
        $this->container['signature_file_hash'] = isset($data['signature_file_hash']) ? $data['signature_file_hash'] : null;
        $this->container['payroll_division'] = isset($data['payroll_division']) ? $data['payroll_division'] : null;
        $this->container['scab_id'] = isset($data['scab_id']) ? $data['scab_id'] : null;
        $this->container['scab_employee_id'] = isset($data['scab_employee_id']) ? $data['scab_employee_id'] : null;
        $this->container['username'] = isset($data['username']) ? $data['username'] : null;
        $this->container['user_type'] = isset($data['user_type']) ? $data['user_type'] : null;
        $this->container['user_invitation_sent_at'] = isset($data['user_invitation_sent_at']) ? $data['user_invitation_sent_at'] : null;
        $this->container['user_activated_at'] = isset($data['user_activated_at']) ? $data['user_activated_at'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['created_by'] = isset($data['created_by']) ? $data['created_by'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['updated_by'] = isset($data['updated_by']) ? $data['updated_by'] : null;
        $this->container['custom_attribute_values'] = isset($data['custom_attribute_values']) ? $data['custom_attribute_values'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['first_name'] === null) {
            $invalidProperties[] = "'first_name' can't be null";
        }
        if ($this->container['last_name'] === null) {
            $invalidProperties[] = "'last_name' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['external'] === null) {
            $invalidProperties[] = "'external' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id The ID of the employee.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name The first name of the employee.
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name The last name of the employee.
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets department
     *
     * @return \Swagger\Client\Model\CondensedDepartment
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param \Swagger\Client\Model\CondensedDepartment $department department
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets employee_mail
     *
     * @return string
     */
    public function getEmployeeMail()
    {
        return $this->container['employee_mail'];
    }

    /**
     * Sets employee_mail
     *
     * @param string $employee_mail The email of the employee.
     *
     * @return $this
     */
    public function setEmployeeMail($employee_mail)
    {
        $this->container['employee_mail'] = $employee_mail;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string $address The address of the employee.
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets zip_code
     *
     * @return string
     */
    public function getZipCode()
    {
        return $this->container['zip_code'];
    }

    /**
     * Sets zip_code
     *
     * @param string $zip_code ZIP code of the address.
     *
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        $this->container['zip_code'] = $zip_code;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city The city of the employee.
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string $phone_number The phone number of the employee.
     *
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets birth_date
     *
     * @return string
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     *
     * @param string $birth_date The birth date of the employee.
     *
     * @return $this
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets workload
     *
     * @return string
     */
    public function getWorkload()
    {
        return $this->container['workload'];
    }

    /**
     * Sets workload
     *
     * @param string $workload The workload of the employee, this value is ignored when the workhour fields contain a value.
     *
     * @return $this
     */
    public function setWorkload($workload)
    {
        $this->container['workload'] = $workload;

        return $this;
    }

    /**
     * Gets hourly_rate
     *
     * @return string
     */
    public function getHourlyRate()
    {
        return $this->container['hourly_rate'];
    }

    /**
     * Sets hourly_rate
     *
     * @param string $hourly_rate The hourly rate
     *
     * @return $this
     */
    public function setHourlyRate($hourly_rate)
    {
        $this->container['hourly_rate'] = $hourly_rate;

        return $this;
    }

    /**
     * Gets selling_hourly_rate
     *
     * @return string
     */
    public function getSellingHourlyRate()
    {
        return $this->container['selling_hourly_rate'];
    }

    /**
     * Sets selling_hourly_rate
     *
     * @param string $selling_hourly_rate The selling hourly rate
     *
     * @return $this
     */
    public function setSellingHourlyRate($selling_hourly_rate)
    {
        $this->container['selling_hourly_rate'] = $selling_hourly_rate;

        return $this;
    }

    /**
     * Gets bsn
     *
     * @return string
     */
    public function getBsn()
    {
        return $this->container['bsn'];
    }

    /**
     * Sets bsn
     *
     * @param string $bsn The BSN of the employee.
     *
     * @return $this
     */
    public function setBsn($bsn)
    {
        $this->container['bsn'] = $bsn;

        return $this;
    }

    /**
     * Gets function
     *
     * @return string
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param string $function The function of the employee.
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets date_of_employment
     *
     * @return string
     */
    public function getDateOfEmployment()
    {
        return $this->container['date_of_employment'];
    }

    /**
     * Sets date_of_employment
     *
     * @param string $date_of_employment The date of employment of the employee in Y-m-d format.
     *
     * @return $this
     */
    public function setDateOfEmployment($date_of_employment)
    {
        $this->container['date_of_employment'] = $date_of_employment;

        return $this;
    }

    /**
     * Gets date_of_resignation
     *
     * @return string
     */
    public function getDateOfResignation()
    {
        return $this->container['date_of_resignation'];
    }

    /**
     * Sets date_of_resignation
     *
     * @param string $date_of_resignation The date of resignation of the employee in Y-m-d format.
     *
     * @return $this
     */
    public function setDateOfResignation($date_of_resignation)
    {
        $this->container['date_of_resignation'] = $date_of_resignation;

        return $this;
    }

    /**
     * Gets external
     *
     * @return bool
     */
    public function getExternal()
    {
        return $this->container['external'];
    }

    /**
     * Sets external
     *
     * @param bool $external Whether the employee is external.
     *
     * @return $this
     */
    public function setExternal($external)
    {
        $this->container['external'] = $external;

        return $this;
    }

    /**
     * Gets afas_warehouse
     *
     * @return string
     */
    public function getAfasWarehouse()
    {
        return $this->container['afas_warehouse'];
    }

    /**
     * Sets afas_warehouse
     *
     * @param string $afas_warehouse The warehouse material bookings of an employee will be booked on. Only applicable for AFAS.
     *
     * @return $this
     */
    public function setAfasWarehouse($afas_warehouse)
    {
        $this->container['afas_warehouse'] = $afas_warehouse;

        return $this;
    }

    /**
     * Gets hour_type_prices
     *
     * @return \Swagger\Client\Model\HourTypePrice[]
     */
    public function getHourTypePrices()
    {
        return $this->container['hour_type_prices'];
    }

    /**
     * Sets hour_type_prices
     *
     * @param \Swagger\Client\Model\HourTypePrice[] $hour_type_prices A list of prices per hour types
     *
     * @return $this
     */
    public function setHourTypePrices($hour_type_prices)
    {
        $this->container['hour_type_prices'] = $hour_type_prices;

        return $this;
    }

    /**
     * Gets workhours_monday
     *
     * @return string
     */
    public function getWorkhoursMonday()
    {
        return $this->container['workhours_monday'];
    }

    /**
     * Sets workhours_monday
     *
     * @param string $workhours_monday The standard amount of workhours on a monday.
     *
     * @return $this
     */
    public function setWorkhoursMonday($workhours_monday)
    {
        $this->container['workhours_monday'] = $workhours_monday;

        return $this;
    }

    /**
     * Gets workhours_tuesday
     *
     * @return string
     */
    public function getWorkhoursTuesday()
    {
        return $this->container['workhours_tuesday'];
    }

    /**
     * Sets workhours_tuesday
     *
     * @param string $workhours_tuesday The standard amount of workhours on a tuesday.
     *
     * @return $this
     */
    public function setWorkhoursTuesday($workhours_tuesday)
    {
        $this->container['workhours_tuesday'] = $workhours_tuesday;

        return $this;
    }

    /**
     * Gets workhours_wednesday
     *
     * @return string
     */
    public function getWorkhoursWednesday()
    {
        return $this->container['workhours_wednesday'];
    }

    /**
     * Sets workhours_wednesday
     *
     * @param string $workhours_wednesday The standard amount of workhours on a wednesday.
     *
     * @return $this
     */
    public function setWorkhoursWednesday($workhours_wednesday)
    {
        $this->container['workhours_wednesday'] = $workhours_wednesday;

        return $this;
    }

    /**
     * Gets workhours_thursday
     *
     * @return string
     */
    public function getWorkhoursThursday()
    {
        return $this->container['workhours_thursday'];
    }

    /**
     * Sets workhours_thursday
     *
     * @param string $workhours_thursday The standard amount of workhours on a thursday.
     *
     * @return $this
     */
    public function setWorkhoursThursday($workhours_thursday)
    {
        $this->container['workhours_thursday'] = $workhours_thursday;

        return $this;
    }

    /**
     * Gets workhours_friday
     *
     * @return string
     */
    public function getWorkhoursFriday()
    {
        return $this->container['workhours_friday'];
    }

    /**
     * Sets workhours_friday
     *
     * @param string $workhours_friday The standard amount of workhours on a friday.
     *
     * @return $this
     */
    public function setWorkhoursFriday($workhours_friday)
    {
        $this->container['workhours_friday'] = $workhours_friday;

        return $this;
    }

    /**
     * Gets workhours_saturday
     *
     * @return string
     */
    public function getWorkhoursSaturday()
    {
        return $this->container['workhours_saturday'];
    }

    /**
     * Sets workhours_saturday
     *
     * @param string $workhours_saturday The standard amount of workhours on a saturday.
     *
     * @return $this
     */
    public function setWorkhoursSaturday($workhours_saturday)
    {
        $this->container['workhours_saturday'] = $workhours_saturday;

        return $this;
    }

    /**
     * Gets workhours_sunday
     *
     * @return string
     */
    public function getWorkhoursSunday()
    {
        return $this->container['workhours_sunday'];
    }

    /**
     * Sets workhours_sunday
     *
     * @param string $workhours_sunday The standard amount of workhours on a sunday.
     *
     * @return $this
     */
    public function setWorkhoursSunday($workhours_sunday)
    {
        $this->container['workhours_sunday'] = $workhours_sunday;

        return $this;
    }

    /**
     * Gets avatar_file_hash
     *
     * @return string
     */
    public function getAvatarFileHash()
    {
        return $this->container['avatar_file_hash'];
    }

    /**
     * Sets avatar_file_hash
     *
     * @param string $avatar_file_hash The hash of the avatar/profile picture of this employee.
     *
     * @return $this
     */
    public function setAvatarFileHash($avatar_file_hash)
    {
        $this->container['avatar_file_hash'] = $avatar_file_hash;

        return $this;
    }

    /**
     * Gets signature_file_hash
     *
     * @return string
     */
    public function getSignatureFileHash()
    {
        return $this->container['signature_file_hash'];
    }

    /**
     * Sets signature_file_hash
     *
     * @param string $signature_file_hash The hash of the signature file of this employee.
     *
     * @return $this
     */
    public function setSignatureFileHash($signature_file_hash)
    {
        $this->container['signature_file_hash'] = $signature_file_hash;

        return $this;
    }

    /**
     * Gets payroll_division
     *
     * @return \Swagger\Client\Model\CondensedDivision
     */
    public function getPayrollDivision()
    {
        return $this->container['payroll_division'];
    }

    /**
     * Sets payroll_division
     *
     * @param \Swagger\Client\Model\CondensedDivision $payroll_division payroll_division
     *
     * @return $this
     */
    public function setPayrollDivision($payroll_division)
    {
        $this->container['payroll_division'] = $payroll_division;

        return $this;
    }

    /**
     * Gets scab_id
     *
     * @return string
     */
    public function getScabId()
    {
        return $this->container['scab_id'];
    }

    /**
     * Sets scab_id
     *
     * @param string $scab_id The external scab ID of the employee.
     *
     * @return $this
     */
    public function setScabId($scab_id)
    {
        $this->container['scab_id'] = $scab_id;

        return $this;
    }

    /**
     * Gets scab_employee_id
     *
     * @return int
     */
    public function getScabEmployeeId()
    {
        return $this->container['scab_employee_id'];
    }

    /**
     * Sets scab_employee_id
     *
     * @param int $scab_employee_id The internal ID of the Scab employee associated with this employee.
     *
     * @return $this
     */
    public function setScabEmployeeId($scab_employee_id)
    {
        $this->container['scab_employee_id'] = $scab_employee_id;

        return $this;
    }

    /**
     * Gets username
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->container['username'];
    }

    /**
     * Sets username
     *
     * @param string $username The username of the user associated with this employee.
     *
     * @return $this
     */
    public function setUsername($username)
    {
        $this->container['username'] = $username;

        return $this;
    }

    /**
     * Gets user_type
     *
     * @return int
     */
    public function getUserType()
    {
        return $this->container['user_type'];
    }

    /**
     * Sets user_type
     *
     * @param int $user_type The type of user associated with this employee. 0 = None, 1 = Admin, 2 = Basic, 3 = Platform.
     *
     * @return $this
     */
    public function setUserType($user_type)
    {
        $this->container['user_type'] = $user_type;

        return $this;
    }

    /**
     * Gets user_invitation_sent_at
     *
     * @return string
     */
    public function getUserInvitationSentAt()
    {
        return $this->container['user_invitation_sent_at'];
    }

    /**
     * Sets user_invitation_sent_at
     *
     * @param string $user_invitation_sent_at The invitation date of the user in ATOM/ISO-8601 format, for as long as the user has not accepted the invitation to this organization, NULL otherwise.
     *
     * @return $this
     */
    public function setUserInvitationSentAt($user_invitation_sent_at)
    {
        $this->container['user_invitation_sent_at'] = $user_invitation_sent_at;

        return $this;
    }

    /**
     * Gets user_activated_at
     *
     * @return string
     */
    public function getUserActivatedAt()
    {
        return $this->container['user_activated_at'];
    }

    /**
     * Sets user_activated_at
     *
     * @param string $user_activated_at The activation date of the user in ATOM/ISO-8601 format.
     *
     * @return $this
     */
    public function setUserActivatedAt($user_activated_at)
    {
        $this->container['user_activated_at'] = $user_activated_at;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at The creation time of the entity.
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return string
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param string $created_by The user that created the entity.
     *
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at The last updated time of the entity.
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets updated_by
     *
     * @return string
     */
    public function getUpdatedBy()
    {
        return $this->container['updated_by'];
    }

    /**
     * Sets updated_by
     *
     * @param string $updated_by The user that last updated the entity.
     *
     * @return $this
     */
    public function setUpdatedBy($updated_by)
    {
        $this->container['updated_by'] = $updated_by;

        return $this;
    }

    /**
     * Gets custom_attribute_values
     *
     * @return \Swagger\Client\Model\CondensedCustomAttributeValue[]
     */
    public function getCustomAttributeValues()
    {
        return $this->container['custom_attribute_values'];
    }

    /**
     * Sets custom_attribute_values
     *
     * @param \Swagger\Client\Model\CondensedCustomAttributeValue[] $custom_attribute_values A list of CustomAttributeValues belonging to the instance.
     *
     * @return $this
     */
    public function setCustomAttributeValues($custom_attribute_values)
    {
        $this->container['custom_attribute_values'] = $custom_attribute_values;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


